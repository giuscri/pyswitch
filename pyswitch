#!/usr/bin/env python
# -*- coding: utf-8 -*-

from __future__ import print_function
from colorama import Fore, Back, Style
from subprocess import Popen, PIPE, STDOUT
from distutils.spawn import find_executable as which

def version(x):
    if x not in ('2', '3'): raise ValueError
    return int(x)

def python_version():
    p = Popen([which('python'), '--version'], stdout=PIPE, stderr=STDOUT)
    p.poll()
    res, _ = p.communicate()
    return version(res.decode().split(' ')[-1][0])

def switch_to(version):
    p = Popen(
        ['ln', '-sf', which('python{}'.format(version)), which('python')],
        stdout=PIPE,
        stderr=STDOUT
    )
    p.wait()
    return p.returncode, p.communicate()[0].decode()

if __name__ == '__main__':
    from argparse import ArgumentParser
    parser = ArgumentParser(description='Change system-wide Python version.')
    parser.add_argument(
        '-p',
        type=version,
        required=True,
        help='Python version. 2, or 3.'
    )

    args = parser.parse_args()
    version = args.p
   
    returncode, stdout = switch_to(version)

    if returncode == 0:
        print(Fore.GREEN + u'✔️' + Style.RESET_ALL, end=' ')
        print('python{}'.format(version))
    else:
        print(Fore.RED + u'✗' + Style.RESET_ALL, end=' ')
        print('Nothing switched.')
        print(':: ' + '\n:: '.join(stdout.strip().split('\n')))
